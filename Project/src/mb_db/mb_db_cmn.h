//---------------------------------------------------------------------------
#ifndef __mb_db_common__
#define __mb_db_common__
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
/// <summary>
/// Объявления макросов, которые не знает Microsoft Visual Studio, для возможности использования
/// различных компиляторов.
/// </summary>
 #ifdef _MSC_VER
  // Директива packed используется для упаковки структур данных в Microtec C/C++ Compiler'е.
  #ifndef packed
    #define packed
  #endif

  #ifndef PACKED
    #define PACKED packed
  #endif

  #ifndef GNU_PACKED
    #define GNU_PACKED
  #endif
 #else
  #ifndef PACKED
    #ifdef _MICROTEC
      #define PACKED packed
    #else
      #define PACKED
    #endif
  #endif

  #ifndef GNU_PACKED
    #if defined(CTK_GNU) || defined(__GNUC__)
      #define GNU_PACKED __attribute__ ((packed))
    #else
      #define GNU_PACKED
    #endif
  #endif
 #endif
//---------------------------------------------------------------------------

#ifdef __IAR_SYSTEMS_ICC__
	#define GNU_PACKED

#endif

//---------------------------------------------------------------------------
#if defined(_MSC_VER) || defined(__IAR_SYSTEMS_ICC__)
#pragma pack(push,1)
#endif
//---------------------------------------------------------------------------


// ------------------------------------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------------------------------------
// --------------------------------------------------COMMON----------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------
/// <summary>
/// Заголовок CPU.
/// </summary>

typedef PACKED struct _TStandartHeaderCPU
{
  unsigned short unit_id;       // идентификатор контроллера
  unsigned short hardware_ver;  // версия платы
  unsigned short firmware_ver;  // версия прошивки контроллера
  unsigned long  serial_number; // заводской номер платы
} GNU_PACKED TStandartHeaderCPU;
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
/// <summary>
/// Датчик влажности.
/// </summary>
typedef PACKED struct _THTSInfo
{
  unsigned short hw_version; // Версия платы
  unsigned long  hw_serial;  // Заводской номер платы датчика температуры и влажности (ДТВ)
  unsigned long  hum_serial; // Заводской номер       датчика               влажности
} GNU_PACKED THTSInfo;
//---------------------------------------------------------------------------

typedef PACKED struct tagDOT { float  a,b;} GNU_PACKED CDOT;



//---------------------------------------------------------------------------
/// <summary>
/// Датчик влажности - калибровки.
/// </summary>
typedef PACKED struct _THTS
{
  THTSInfo hts_numbers; // версии и номера
  CDOT     kal;         // коэф. датчика влажности
} GNU_PACKED THTS;
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
/// <summary>
/// Статистика по обмену.
/// </summary>
typedef PACKED struct _TStatisticCPU
{
  unsigned long tx_cnt;       // Количество переданных пакетов
  unsigned long rx_cnt;       // Количество принятых пакетов
  unsigned long request_cnt;  // Количество запросов, полученных модулем
  unsigned long comm_err_cnt; // Количество коммуникационных ошибок, возникших при приеме (пакеты, принятые с ошибками в протоколе - ошибки синхронизации битов, ошибки контрольной суммы и т.д)
  unsigned long reply_cnt;    // Количество ответов, отправленных модулем
} GNU_PACKED TStatisticCPU;
//---------------------------------------------------------------------------



//---------------------------------------------------------------------------
/// <summary>
/// Статистика по обмену внешних устройств
/// </summary>
#define EXT_STAT_NO_LINK 0x02
#define EXT_STAT_OPROS	0x01
typedef PACKED struct _TExternalDeviceStatistic
{
  unsigned short link_state; // Состояние связи
  unsigned long  tx_cnt;     // Количество переданных пакетов
  unsigned long  rx_cnt;     // Количество принятых пакетов
} GNU_PACKED TExternalDeviceStatistic;
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
/// <summary>
/// Флаги статусов и ошибок
/// </summary>
typedef PACKED struct _TDi_Std_Flags
{
  unsigned short link:1;        // Наличие связи с контроллером (прописывается устройством уровнем выше)) (1 - нет связи)
  unsigned short eeprom_err:1;  // Ошибка EEPROM контроллера (1 - ошибка)
  unsigned short diag_mode:1;   // Режим диагностики (0 - рабочий режим)
  unsigned short link_on:1; 	// Режим опроса устройства (1 - опрашивать)
  unsigned short calib_mode:1;  // Режим калибровки (0 - рабочий режим)
  unsigned short ready_data:1;  //Готовность данных
  unsigned short RESERVED:10;   // зарезервировано
} GNU_PACKED TDi_Std_Flags;
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
/// <summary>
/// Стандартный заголовок мгновенных данных
/// </summary>
typedef PACKED struct _TInstantHeader
{
  unsigned long restart_time; // Время с момента рестарта
  TDi_Std_Flags di_std_flags; //Флаги состояния платы
} GNU_PACKED TInstantHeader;
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
/// <summary>
/// Заголовок.
/// </summary>
typedef PACKED struct _TStdHdr
{
  TStandartHeaderCPU StandartHeader;       // Стандартный заголовок контроллера
    TStatisticCPU      StatisticCPU;         // Статистика по контроллеру
    TInstantHeader     InstantHeader;        // Стандартный заголовок мгновенных данных
} GNU_PACKED TStdHdr;
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
/// <summary>
/// Статистика по контроллерам.
/// </summary>
typedef PACKED struct _statistics_t
{
	unsigned long _tx; // переданные пакеты на контроллер.
	unsigned long _rx; // принятые пакеты от контроллера.
} GNU_PACKED statistics_t;
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
typedef TStdHdr inter_cpu_statistics_t;
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
#if defined(_FIU_BKP_) || defined(_IUS_PU_)
/// <summary>
/// ИМ Bpower в БД MODBUS FIU - АРМ.
/// Описание см в КРАУ1.456.010-08 В1.
/// </summary>
typedef PACKED struct _bpower_di_arm_t
{
  unsigned short _data;
} GNU_PACKED bpower_di_arm_t;
#endif
//---------------------------------------------------------------------------



// ------------------------------------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------------------------------------
// -------------------------------------END COMMON-------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------------------------------------------------------------


//---------------------------------------------------------------------------
#if defined(_MSC_VER) || defined(__IAR_SYSTEMS_ICC__)
#pragma pack(pop)
#endif
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
#endif
